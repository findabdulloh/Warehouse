// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Warehouse.Data.DbContexts;

#nullable disable

namespace Warehouse.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Warehouse.Domain.Entities.InputDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("InputDocuments");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Number = "#001"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2025, 8, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            Number = "#002"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2025, 8, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            Number = "#003"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Number = "#004"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Date = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Number = "#005"
                        });
                });

            modelBuilder.Entity("Warehouse.Domain.Entities.InputResource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("InputDocumentId")
                        .HasColumnType("bigint");

                    b.Property<long>("MeasurementUnitId")
                        .HasColumnType("bigint");

                    b.Property<long>("ResourceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("InputDocumentId");

                    b.HasIndex("MeasurementUnitId");

                    b.HasIndex("ResourceId");

                    b.ToTable("InputResources");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Amount = 10m,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            InputDocumentId = 2L,
                            MeasurementUnitId = 2L,
                            ResourceId = 5L
                        },
                        new
                        {
                            Id = 2L,
                            Amount = 500m,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            InputDocumentId = 1L,
                            MeasurementUnitId = 3L,
                            ResourceId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Amount = 800m,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            InputDocumentId = 1L,
                            MeasurementUnitId = 4L,
                            ResourceId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            Amount = 5m,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            InputDocumentId = 1L,
                            MeasurementUnitId = 1L,
                            ResourceId = 3L
                        },
                        new
                        {
                            Id = 5L,
                            Amount = 7m,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            InputDocumentId = 3L,
                            MeasurementUnitId = 2L,
                            ResourceId = 4L
                        },
                        new
                        {
                            Id = 6L,
                            Amount = 250m,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            InputDocumentId = 4L,
                            MeasurementUnitId = 3L,
                            ResourceId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            Amount = 15m,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            InputDocumentId = 5L,
                            MeasurementUnitId = 2L,
                            ResourceId = 4L
                        },
                        new
                        {
                            Id = 8L,
                            Amount = 15m,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            InputDocumentId = 5L,
                            MeasurementUnitId = 2L,
                            ResourceId = 5L
                        });
                });

            modelBuilder.Entity("Warehouse.Domain.Entities.MeasurementUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("MeasurementUnits");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "тонна",
                            Status = 0
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "шт",
                            Status = 0
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "литр",
                            Status = 0
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "кг",
                            Status = 0
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "гр",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Warehouse.Domain.Entities.Resource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Вода",
                            Status = 0
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Картошка",
                            Status = 0
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Зерно",
                            Status = 0
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Nvidia GeForce RTX 5070 Ti",
                            Status = 0
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Монитор",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Warehouse.Domain.Entities.InputResource", b =>
                {
                    b.HasOne("Warehouse.Domain.Entities.InputDocument", "InputDocument")
                        .WithMany("InputResources")
                        .HasForeignKey("InputDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warehouse.Domain.Entities.MeasurementUnit", "MeasurementUnit")
                        .WithMany()
                        .HasForeignKey("MeasurementUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warehouse.Domain.Entities.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InputDocument");

                    b.Navigation("MeasurementUnit");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Warehouse.Domain.Entities.InputDocument", b =>
                {
                    b.Navigation("InputResources");
                });
#pragma warning restore 612, 618
        }
    }
}
